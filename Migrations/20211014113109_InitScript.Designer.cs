// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using YarnEye.WebApi.Context;

namespace YarnEye.WebApi.Migrations
{
    [DbContext(typeof(YarnEyeContext))]
    [Migration("20211014113109_InitScript")]
    partial class InitScript
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 63)
                .HasAnnotation("ProductVersion", "5.0.11")
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.SerialColumn);

            modelBuilder.Entity("YarnEye.WebApi.Context.ColorAssignment", b =>
                {
                    b.Property<int>("AssignmentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.SerialColumn);

                    b.Property<string>("AssignmentCode")
                        .HasColumnType("text");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<byte[]>("SampleImage")
                        .HasColumnType("bytea");

                    b.Property<decimal?>("SetHue")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("SetSaturation")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("SetValue")
                        .HasColumnType("numeric");

                    b.HasKey("AssignmentId");

                    b.ToTable("ColorAssignment");
                });

            modelBuilder.Entity("YarnEye.WebApi.Context.ProdLine", b =>
                {
                    b.Property<int>("ProdLineId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.SerialColumn);

                    b.Property<int?>("AssignmentId")
                        .HasColumnType("integer");

                    b.Property<int?>("ColorAssignmentAssignmentId")
                        .HasColumnType("integer");

                    b.Property<int?>("OrderNo")
                        .HasColumnType("integer");

                    b.Property<string>("ProdLineCode")
                        .HasColumnType("text");

                    b.Property<string>("ProdLineName")
                        .HasColumnType("text");

                    b.HasKey("ProdLineId");

                    b.HasIndex("ColorAssignmentAssignmentId");

                    b.ToTable("ProdLine");
                });

            modelBuilder.Entity("YarnEye.WebApi.Context.YarnCheckResult", b =>
                {
                    b.Property<int>("ResultId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.SerialColumn);

                    b.Property<int?>("AssignmentId")
                        .HasColumnType("integer");

                    b.Property<int?>("ColorAssignmentAssignmentId")
                        .HasColumnType("integer");

                    b.Property<decimal?>("ColorHue")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("ColorSaturation")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("ColorValue")
                        .HasColumnType("numeric");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<decimal?>("DiffHue")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("DiffSaturation")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("DiffValue")
                        .HasColumnType("numeric");

                    b.Property<int?>("ProdLineId")
                        .HasColumnType("integer");

                    b.Property<string>("SerialNo")
                        .HasColumnType("text");

                    b.Property<int?>("TestResult")
                        .HasColumnType("integer");

                    b.HasKey("ResultId");

                    b.HasIndex("ColorAssignmentAssignmentId");

                    b.HasIndex("ProdLineId");

                    b.ToTable("YarnCheckResult");
                });

            modelBuilder.Entity("YarnEye.WebApi.Context.ProdLine", b =>
                {
                    b.HasOne("YarnEye.WebApi.Context.ColorAssignment", "ColorAssignment")
                        .WithMany()
                        .HasForeignKey("ColorAssignmentAssignmentId");

                    b.Navigation("ColorAssignment");
                });

            modelBuilder.Entity("YarnEye.WebApi.Context.YarnCheckResult", b =>
                {
                    b.HasOne("YarnEye.WebApi.Context.ColorAssignment", "ColorAssignment")
                        .WithMany()
                        .HasForeignKey("ColorAssignmentAssignmentId");

                    b.HasOne("YarnEye.WebApi.Context.ProdLine", "ProdLine")
                        .WithMany()
                        .HasForeignKey("ProdLineId");

                    b.Navigation("ColorAssignment");

                    b.Navigation("ProdLine");
                });
#pragma warning restore 612, 618
        }
    }
}
